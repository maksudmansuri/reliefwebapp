# Generated by Django 4.0 on 2022-01-07 11:13

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hospital', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AmountCalculation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_value', models.FloatField(blank=True, default=0, null=True)),
                ('tax_percentage', models.FloatField(blank=True, default=0, null=True)),
                ('tax_value', models.FloatField(blank=True, default=0, null=True)),
                ('commission_percentage', models.FloatField(blank=True, default=0, null=True)),
                ('commission_value', models.FloatField(blank=True, default=0, null=True)),
                ('discount_percentage', models.FloatField(blank=True, default=0, null=True)),
                ('discount_value', models.FloatField(blank=True, default=0, null=True)),
                ('homevisit_value', models.FloatField(blank=True, default=0, null=True)),
                ('extra_charges', models.FloatField(blank=True, default=0, null=True)),
                ('merchant_share', models.FloatField(blank=True, default=0, null=True)),
                ('admin_share', models.FloatField(blank=True, default=0, null=True)),
                ('payable_value', models.FloatField(blank=True, default=0, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('applied_date', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('applied_time', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('is_applied', models.BooleanField(blank=True, default=True, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('accepted_date', models.DateTimeField(blank=True, null=True)),
                ('taken_date', models.DateTimeField(blank=True, null=True)),
                ('rejected_date', models.DateTimeField(blank=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_taken', models.BooleanField(default=False)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('modified_time', models.TimeField(blank=True, null=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('add_note', models.CharField(blank=True, default='', max_length=5000, null=True)),
                ('booking_type', models.CharField(blank=True, default='OPD', max_length=64, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('reject_within_5', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['updated_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingAmount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tax_value', models.FloatField(blank=True, default=0, null=True)),
                ('amountpaid', models.FloatField(blank=True, default=0, null=True)),
                ('homevisit_value', models.FloatField(blank=True, default=0, null=True)),
                ('extra_charges', models.FloatField(blank=True, default=0, null=True)),
                ('amountdicounted', models.FloatField(blank=True, default=0, null=True)),
                ('usercommission', models.FloatField(blank=True, default=0, null=True)),
                ('reliefcommission', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ForSome',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_pic', models.FileField(default='', max_length=500, null=True, upload_to='user/profile_pic')),
                ('relationship', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('name_title', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('fisrt_name', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('last_name', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('email', models.EmailField(blank=True, default='xyz@gmail.com', max_length=254, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('country', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('zip_Code', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('ID_proof', models.FileField(blank=True, default='', null=True, upload_to='someone/ID/images')),
                ('gender', models.CharField(default='', max_length=255, null=True)),
                ('add_notes', models.CharField(default='', max_length=5000, null=True)),
                ('bloodgroup', models.CharField(default='', max_length=255, null=True)),
                ('is_appiled', models.BooleanField(blank=True, default=False, null=True)),
                ('is_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('is_active', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.patients')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('invoicepdf', models.FileField(blank=True, default='', max_length=164, null=True, upload_to='')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.bookingamount')),
            ],
        ),
        migrations.CreateModel(
            name='OrderBooking',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('booking_type', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('booking_for', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('applied_time', models.TimeField(blank=True, null=True)),
                ('applied_date', models.DateField(blank=True, null=True)),
                ('accepted_date', models.DateTimeField(blank=True, null=True)),
                ('otp_verified_datetime', models.DateTimeField(blank=True, null=True)),
                ('report_upload_datetime', models.DateTimeField(blank=True, default=datetime.datetime(2021, 1, 1, 0, 0), null=True)),
                ('store_invoice_datetime', models.DateTimeField(blank=True, default=datetime.datetime(2021, 1, 1, 0, 0), null=True)),
                ('taken_date', models.DateTimeField(blank=True, null=True)),
                ('rejected_date', models.DateTimeField(blank=True, null=True)),
                ('is_applied', models.BooleanField(blank=True, default=False, null=True)),
                ('is_accepted', models.BooleanField(blank=True, default=False, null=True)),
                ('is_otp_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('is_report_uploaded', models.BooleanField(blank=True, default=False, null=True)),
                ('is_taken', models.BooleanField(blank=True, default=False, null=True)),
                ('is_rejected', models.BooleanField(blank=True, default=False, null=True)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('reject_within_5', models.DateTimeField(blank=True, default=datetime.datetime(2021, 1, 1, 0, 0), null=True)),
                ('status', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('add_note', models.CharField(blank=True, default='', max_length=5000, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('modified_time', models.TimeField(blank=True, null=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('homevisitcharges', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('report', models.FileField(blank=True, default='', null=True, upload_to='')),
                ('invoice', models.FileField(blank=True, default='', null=True, upload_to='booking/invoices')),
                ('prescription', models.FileField(blank=True, default='', max_length=256, null=True, upload_to='booking/prescription')),
                ('store_invoice', models.FileField(blank=True, default='', max_length=256, null=True, upload_to='booking/store_invoice')),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('is_amount_paid', models.BooleanField(default=False)),
                ('store_invoice_uploaded', models.BooleanField(default=False)),
                ('payment_status', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('HLP', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='merchant', to='accounts.customuser')),
                ('for_whom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.forsome')),
                ('hospitalstaffdoctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.hospitalstaffdoctors')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.orderbooking')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient', to='accounts.customuser')),
                ('services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.serviceandcharges')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentReliefPetient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount_paid', models.FloatField()),
                ('next_date', models.DateTimeField(blank=True, default=datetime.datetime(1970, 1, 1, 0, 0), null=True)),
                ('status', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.orderbooking')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.patients')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Temp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.CharField(blank=True, max_length=500, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField(default=0)),
                ('applied_date', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('applied_time', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('is_applied', models.BooleanField(blank=True, default=True, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('accepted_date', models.DateTimeField(blank=True, null=True)),
                ('taken_date', models.DateTimeField(blank=True, null=True)),
                ('rejected_date', models.DateTimeField(blank=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_taken', models.BooleanField(default=False)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('modified_time', models.TimeField(blank=True, null=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('add_note', models.CharField(blank=True, default='', max_length=5000, null=True)),
                ('report', models.FileField(blank=True, default='', null=True, upload_to='')),
                ('desc', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('send_to_doctor', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('for_whom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.forsome')),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.labs')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ReBooking',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('applied_date', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('applied_time', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('is_applied', models.BooleanField(blank=True, default=True, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('accepted_date', models.DateTimeField(blank=True, null=True)),
                ('taken_date', models.DateTimeField(blank=True, null=True)),
                ('rejected_date', models.DateTimeField(blank=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_taken', models.BooleanField(default=False)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('modified_time', models.TimeField(blank=True, null=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('add_note', models.CharField(blank=True, default='', max_length=5000, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.booking')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.serviceandcharges')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PicturesForMedicine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('prescription', models.FileField(blank=True, default='', max_length=256, null=True, upload_to=None)),
                ('store_invoice', models.FileField(blank=True, default='', max_length=256, null=True, upload_to=None)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('amount_paid', models.BooleanField(default=False)),
                ('applied_date', models.DateField(blank=True, max_length=64, null=True)),
                ('applied_time', models.TimeField(blank=True, max_length=64, null=True)),
                ('is_applied', models.BooleanField(blank=True, default=True, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('accepted_date', models.DateTimeField(blank=True, null=True)),
                ('taken_date', models.DateTimeField(blank=True, null=True)),
                ('rejected_date', models.DateTimeField(blank=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_taken', models.BooleanField(default=False)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('modified_time', models.TimeField(blank=True, null=True)),
                ('modified_date', models.DateField(blank=True, null=True)),
                ('add_note', models.CharField(blank=True, default='', max_length=5000, null=True)),
                ('desc', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
                ('pharmacy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.pharmacy')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='phoneOPTforoders',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('otp', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('count', models.IntegerField(blank=True, default=0, null=True)),
                ('validated', models.BooleanField(blank=True, default=False, null=True)),
                ('otp_session_id', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.orderbooking')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='PatientSymptons',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('symptom', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('level', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('TreatmentReliefPetient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.treatmentreliefpetient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientReports',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Report', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('Description', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('number_of_attempt', models.IntegerField(blank=True, default=1, null=True)),
                ('is_active', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('TreatmentReliefPetient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.treatmentreliefpetient')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientMedicine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('medicine_name', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('dose_per_day', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('number_of_days', models.IntegerField(blank=True, default=1, null=True)),
                ('time_to_take', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('is_active', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('TreatmentReliefPetient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.treatmentreliefpetient')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='patientFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount_paid', models.FloatField(default=0)),
                ('file', models.FileField(blank=True, default='', null=True, upload_to='patients/documents/file')),
                ('file_purpose', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('file_addnote', models.TextField(blank=True, default='', max_length=5000, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.orderbooking')),
                ('hospitaldoctors', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.hospitalstaffdoctors')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.patients')),
                ('treatmentreliefpetient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.treatmentreliefpetient')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientBottelAndInjections',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('BI_content', models.FileField(blank=True, choices=[(1, 'bottle'), (2, 'Injection')], default='', null=True, upload_to='')),
                ('desc', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('TreatmentReliefPetient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.treatmentreliefpetient')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bookingandlabtest', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('booking_for', models.CharField(blank=True, choices=[(1, 'Hospital'), (2, 'Laboratory'), (3, 'Pharmacy')], default='', max_length=256, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, choices=[('Processed', 'Processed'), ('Successed', 'Successed'), ('Failed', 'Failed'), ('Cancelled', 'Cancelled'), ('Refunded', 'Refunded')], default='', max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('is_booking_Verified', models.BooleanField(default=False)),
                ('is_taken', models.BooleanField(default=False)),
                ('counter', models.IntegerField(default=0)),
                ('taken_date_time', models.DateTimeField(auto_now=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.serviceandcharges')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='NewLabTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.orderbooking')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.serviceandcharges')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MerchantAccounts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('commissionpercentage', models.FloatField(blank=True, default=0, null=True)),
                ('totalcollection', models.FloatField(blank=True, default=0, null=True)),
                ('totalpaid', models.FloatField(blank=True, default=0, null=True)),
                ('totalremaining', models.FloatField(blank=True, default=0, null=True)),
                ('totaldiscountprovided', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.invoice')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='MediacalRecords',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('prescription', models.FileField(blank=True, default='', max_length=256, null=True, upload_to=None)),
                ('symptoms', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('AppoinmentDate', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('for_whom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.forsome')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.hospitals')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.patients')),
            ],
        ),
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.labs')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.serviceandcharges')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labtest', to='patient.slot')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FollowedUp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('next_date', models.DateTimeField(auto_now_add=True)),
                ('previous_date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.booking')),
            ],
            options={
                'ordering': ['next_date'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('percentage', models.FloatField(blank=True, default=0, null=True)),
                ('discoutn_type', models.CharField(blank=True, default='', max_length=164, null=True)),
                ('booking_type', models.CharField(blank=True, default='', max_length=164, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser')),
            ],
        ),
        migrations.AddField(
            model_name='bookingamount',
            name='booking',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.orderbooking'),
        ),
        migrations.AddField(
            model_name='bookingamount',
            name='discount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.discount'),
        ),
        migrations.AddField(
            model_name='bookingamount',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser'),
        ),
        migrations.AddField(
            model_name='booking',
            name='for_whom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.forsome'),
        ),
        migrations.AddField(
            model_name='booking',
            name='hospital',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.hospitals'),
        ),
        migrations.AddField(
            model_name='booking',
            name='hospitalstaffdoctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.hospitalstaffdoctors'),
        ),
        migrations.AddField(
            model_name='booking',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser'),
        ),
        migrations.AddField(
            model_name='booking',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.serviceandcharges'),
        ),
        migrations.CreateModel(
            name='Admited',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bed_charges', models.FloatField(blank=True, default=0, null=True)),
                ('other_charges', models.FloatField(blank=True, default=0, null=True)),
                ('doctor_charges', models.FloatField(blank=True, default=0, null=True)),
                ('tax_charges', models.FloatField(blank=True, default=0, null=True)),
                ('total_charges', models.FloatField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=64, null=True)),
                ('admined_date', models.DateTimeField(blank=True, null=True)),
                ('discharge_date', models.DateTimeField(blank=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('add_note', models.CharField(blank=True, default='', max_length=5000, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.rebooking')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.hospitals')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.hospitalrooms')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
